/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
        conditional_layers {
          compatible = "zmk,conditional-layers";
          tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
          };
        };

        keymap {
                compatible = "zmk,keymap";

                Base_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  ~   |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                    | GUI | LWR | SPC |   | RET | RSE  | ALT |
                        bindings = <
   &kp TAB        &kp Q &kp W &kp E    &kp R &kp T        &kp Y &kp U  &kp I     &kp O   &kp P    &kp TILDE
   &mt LCTRL ESC  &kp A &kp S &kp D    &kp F &kp G        &kp H &kp J  &kp K     &kp L   &kp SEMI &mt RCTRL SQT
   &mt LSHFT LPAR &kp Z &kp X &kp C    &kp V &kp B        &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &mt RSHFT RPAR
                             &kp LGUI &mo 1 &kp SPACE    &kp RET &mo 2 &kp RALT
                        >;
                };
                Lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | ESC  |
// | CTRL | Ins |     |     |     |     |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     |     |   | DEL |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT  &kp HASH &kp DLLR &kp PRCNT &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp ESC
   &kp LCTRL &kp INS  &trans  &trans   &trans   &trans    &kp LEFT  &kp DOWN &kp UP          &kp RIGHT &trans &trans
   &kp LSHFT &trans   &trans  &trans   &trans   &trans    &trans    &trans   &trans &trans   &trans &trans
                           &kp LGUI &trans &trans    &kp DEL  &trans   &kp RALT
                        >;
                };
                Raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | ESC  |
// | CTRL | Home| PgUp| Prnt|     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT | End | PgDn|     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | BSP |   |     |     | ALT |
                        bindings = <
   &kp TAB   &kp N1   &kp N2    &kp N3    &kp N4   &kp N5     &kp N6    &kp N7    &kp N8   &kp N9   &kp N0   &kp ESC
   &kp LCTRL &kp HOME &kp PG_UP &kp PSCRN &trans   &trans     &kp MINUS &kp EQUAL &kp LBKT &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &kp END  &kp PG_DN &trans    &trans   &trans     &kp UNDER &kp PLUS  &kp LBRC &kp RBRC &kp PIPE &kp TILDE
                                 &kp LGUI &trans   &kp BSPC   &trans &trans &kp RALT
                        >;
                };
                Adjust_layer {
// -----------------------------------------------------------------------------------------
// |  F1  | F2  | F3  | F4  | F5  | F6  |   | F7  | F8  | F9  | F10 | F11 | F12  |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     |     |   |     |     | ALT |
                        bindings = <
   &kp F1     &kp F2       &kp F3       &kp F4       &kp F5       &kp F6        &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &trans &trans &trans &trans  &trans  &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans        &trans &trans &trans &trans  &trans  &trans
                                        &kp LGUI     &trans       &trans        &trans &trans &kp RALT
                        >;
                };
        };
};
